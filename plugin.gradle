import com.eriwen.gradle.js.tasks.MinifyJsTask
import com.eriwen.gradle.js.tasks.GzipJsTask
import com.eriwen.gradle.js.tasks.CombineJsTask

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.eriwen:gradle-js-plugin:0.3.19-SNAPSHOT'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    rhino
}

dependencies {
    rhino 'org.mozilla:rhino:1.7R3'
}

apply plugin: 'js'

// Combine JS files
task combineJsDeprecated(type: CombineJsTask) {
    file2 = fileTree(dir: "${projectDir}/src/test/resources", includes: ['file2.js'])
    file1 = fileTree(dir: "${projectDir}/src/test/resources", includes: ['file1.js'])
    inputs.files file2 + file1
    outputs.file file("${buildDir}/all.js")
}

combineJs {
    source = ["${projectDir}/src/test/resources/file2.js", "${projectDir}/src/test/resources/file1.js"]
    dest = file("${buildDir}/all.js")
}

// Minify with Google Closure Compiler
minifyJs {
    inputs.file file("${buildDir}/all.js")
    outputs.file file("${buildDir}/all-min.js")
    warningLevel = 'QUIET'
}

task minify(type: MinifyJsTask) {
    source = "${buildDir}/all.js"
    dest = "${buildDir}/all-min.js"
    warningLevel = 'QUIET'
}

// GZip it!
gzipJs {
    inputs.file file("${buildDir}/all-min.js")
    outputs.file file("${buildDir}/all-min.js")
}

task gzip(type: GzipJsTask) {
    source = file("${buildDir}/all-min.js")
    dest = file("${buildDir}/all-min.js")
}

jshint {
    inputs.files fileTree(dir: "${projectDir}/src/test/resources", includes: ['file1.js'])
    outputs.file file("${buildDir}/jshint.out")
}

jsdoc {
    inputs.files fileTree(dir: "${projectDir}/src/test/resources", includes: ['file2.js'])
    outputs.dir "${buildDir}/jsdoc"
    options = []
}

props2js {
    inputs.file file("${projectDir}/src/test/resources/test.properties")
    outputs.file file("${buildDir}/props.jsonp")
    type = 'jsonp'
    functionName = 'fn'
}
